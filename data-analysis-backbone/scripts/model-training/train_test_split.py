# -*- coding: utf-8 -*-
"""train_test_split.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rhrnsow67NFH02UNRk8GJ5c1GTFAHfCO
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

ROOT_PATH = "./"
LABELLING = "feature-generation/labelling/regression_model.parquet"
TRAIN_TEST_SPLIT = "model-training/train-test-split/"

df = pd.read_parquet(
    ROOT_PATH
    + LABELLING
)

"""We have separated the data into training and testing sets to train and validate the model. We will use the train-test split function from scikit-learn. We believe that an 70-30% split for the training set is appropriate."""

X = df.drop('GoldsteinScale', axis=1)
y = df['GoldsteinScale']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

X_train.to_parquet(
    ROOT_PATH
    + TRAIN_TEST_SPLIT
    + "X_train.parquet"
)

X_test.to_parquet(
    ROOT_PATH
    + TRAIN_TEST_SPLIT
    + "X_test.parquet"
)

df_ytrain = y_train.to_frame()
df_ytrain.to_parquet(
    ROOT_PATH
    + TRAIN_TEST_SPLIT
    + "Y_train.parquet"
)

df_ytest = y_test.to_frame()
df_ytest.to_parquet(
    ROOT_PATH
    + TRAIN_TEST_SPLIT
    + "Y_test.parquet"
)